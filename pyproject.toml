[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "polymarket-agents"
dynamic = ["version"]
description = "AI trading agents for Polymarket with advanced MCP integration"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "Polymarket", email = "liam@polymarket.com" }
]
keywords = ["polymarket", "trading", "ai", "prediction-markets", "mcp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core AI and OpenAI Agent dependencies
    "openai>=1.66.0",
    "openai-agents[litellm]==0.0.16",
    "langchain>=0.2.11",
    "langchain-openai>=0.1.19",
    "langchain-community>=0.2.10",
    "langchain-core>=0.2.26",
    "langchain-chroma>=0.1.2",
    "langchain-text-splitters>=0.2.2",
    "langgraph>=0.1.17",
    "langsmith>=0.1.94",
    "langchainhub>=0.1.20",
    
    # MCP (Model Context Protocol) integration
    "mcp>=1.0.0",
    
    # Environment and configuration
    "python-dotenv>=1.0.1",
    "typer>=0.12.3",
    "pydantic>=2.8.2",
    
    # Crypto and blockchain
    "web3>=6.11.0",
    "eth-account>=0.13.1",
    "eth-utils>=4.1.1",
    "eth-abi>=5.1.0",
    "eth-hash>=0.7.0",
    "eth-keyfile>=0.8.1",
    "eth-keys>=0.5.1",
    "eth-rlp>=2.1.0",
    "eth-typing>=4.4.0",
    "poly-eip712-structs>=0.0.1",
    "py-clob-client>=0.17.5",
    "py-order-utils>=0.3.2",
    "bitarray>=2.9.2",
    "hexbytes>=1.2.1",
    "rlp>=4.0.1",

    "pycryptodome>=3.20.0",
    "pyunormalize>=15.1.0",
    "cytoolz>=0.12.3",
    
    # HTTP and async networking
    "aiohttp>=3.10.0",
    "httpx>=0.27.0",
    "httpcore>=1.0.5",
    "httptools>=0.6.1",
    "anyio>=4.4.0",
    "async-timeout>=4.0.3",
    "uvloop>=0.19.0",
    "websockets>=12.0",
    "websocket-client>=1.8.0",
    
    # FastAPI and web framework
    "fastapi>=0.111.0",
    "fastapi-cli>=0.0.4",
    "uvicorn>=0.30.3",
    "starlette>=0.37.2",
    "python-multipart>=0.0.9",
    "jinja2>=3.1.4",
    
    # Vector database and RAG
    "chromadb>=0.5.5",
    "chroma-hnswlib>=0.7.6",
    "numpy>=1.26.4",
    "scipy>=1.11.0",
    "lru-dict>=1.3.0",
    "mmh3>=4.1.0",
    
    # Data processing and utilities
    "pandas>=2.0.0",
    "tiktoken>=0.7.0",
    "tokenizers>=0.19.1",
    "regex>=2024.7.24",
    "orjson>=3.10.6",
    "ujson>=5.10.0",
    "msgpack>=1.0.0",
    
    # External APIs and integrations
    "newsapi-python>=0.2.7",
    "tavily-python>=0.3.5",
    "google-auth>=2.32.0",
    "requests>=2.32.3",
    "requests-oauthlib>=2.0.0",
    "oauthlib>=3.2.2",
    
    # Data validation and serialization
    "marshmallow>=3.21.3",
    "dataclasses-json>=0.6.7",
    "jsonschema>=4.23.0",
    "jsonschema-specifications>=2023.12.1",
    "jsonpatch>=1.33",
    "jsonpointer>=3.0.0",
    
    # Monitoring and telemetry
    "opentelemetry-api>=1.26.0",
    "opentelemetry-sdk>=1.26.0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.26.0",
    "opentelemetry-instrumentation>=0.47b0",
    "opentelemetry-instrumentation-fastapi>=0.47b0",
    "opentelemetry-instrumentation-asgi>=0.47b0",
    "coloredlogs>=15.0.1",
    "humanfriendly>=10.0",
    
    # Database and caching
    "sqlalchemy>=2.0.31",
    "cachetools>=5.4.0",
    "tenacity>=8.5.0",
    "backoff>=2.2.1",
    
    # Kubernetes and cloud
    "kubernetes>=30.1.0",
    
    # Utilities
    "click>=8.1.7",
    "rich>=13.7.1",
    "tqdm>=4.66.4",
    "PyYAML>=6.0.1",
    "toml>=0.10.2",
    "packaging>=24.1",
    "filelock>=3.15.4",
    "platformdirs>=4.2.2",
    "six>=1.16.0",
    "deprecation>=2.1.0",
    "typing-extensions>=4.12.2",
    "mypy-extensions>=1.0.0",
    "overrides>=7.7.0",
    "wrapt>=1.16.0",
    "monotonic>=1.6",
    "sniffio>=1.3.1",
    "idna>=3.7",
    "certifi>=2024.7.4",
    "charset-normalizer>=3.3.2",
    "urllib3>=2.2.2",
    "email-validator>=2.2.0",
    "python-dateutil>=2.9.0.post0",
    "dnspython>=2.6.1",
    "bcrypt>=4.2.0",
    "posthog>=3.5.0",
    "devtools>=0.12.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.2",
    "pre-commit>=3.8.0",
    "black>=24.0.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "types-requests>=2.32.0.20240712",
]

test = [
    "pytest>=8.3.2",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/polymarket/agents"
Documentation = "https://github.com/polymarket/agents"
Repository = "https://github.com/polymarket/agents"
Issues = "https://github.com/polymarket/agents/issues"

[project.scripts]
polymarket-cli = "scripts.python.cli:app"
polymarket-agent = "polymarket_agents.application.trade:main"

[tool.hatch.version]
path = "polymarket_agents/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["polymarket_agents"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "agents.*",
    "chromadb.*",
    "newsapi.*",
    "web3.*",
    "eth_account.*",
    "poly_eip712_structs.*",
    "py_clob_client.*",
    "py_order_utils.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"] 